import json

# 프롬프트 관련

class PromptBuilder:

    @staticmethod
    def build_suggestion_prompt(user_ingredients: list) -> str:
        return f"""
    당신은 전문 요리사 AI입니다. 사용자가 보유한 재료를 최대한 활용하여 만들 수 있는 요리 6가지를 추천하세요.

    📌 사용 가능한 재료 목록:
    {json.dumps(user_ingredients, ensure_ascii=False)}

    필수 조건:
    - 추천하는 각 요리의 `use_ingredients` 목록은 반드시 사용자가 제공한 `user_ingredients` 목록 내에서만 구성되어야 합니다.
    - 소금, 설탕, 간장, 고추장, 된장, 식용유, 참기름, 다진 마늘, 후춧가루, 깨, 물, 밥 등 **기본 조미료 및 주방에 흔히 있는 재료**는 별도 명시가 없더라도 사용할 수 있습니다. 이 외의 재료는 절대 임의로 포함하지 마세요.
    - 현실적으로 조리 가능한, 창의적이고 수준 높은 요리를 추천하세요.
    - 요리의 다양성을 고려하세요. 동일한 형태(예: 전, 볶음밥, 샐러드 등)만 반복하지 말고, 구이, 찜, 토스트, 오븐 요리, 수제 간식 등 다양한 방식의 요리를 구성하세요.
    - 대중적으로 인식되는 **실제 요리 이름**을 사용하세요. 예: 오징어 파스타, 참치 토스트, 간장 돼지구이, 스팸구이덮밥 등
    - 식재료로 사용할 수 없는 항목(예: 사람, 동물, 똥, 오줌, 플라스틱 등 비식용 물질)이 포함되어 있다면, 요리 추천은 절대 하지 말고 다음과 같은 형식으로 에러 메시지를 정확히 JSON으로 출력하세요:
    {{
      "error": "식재료로 사용할 수 없는 항목이 포함되어 있습니다.",
      "invalid_ingredients": ["사람", "플라스틱"]
    }}
    - 각 요리의 난이도를 1~5 사이 숫자로 표기하세요.
    - 응답은 반드시 **JSON 형식 본문만 출력**하세요. `{{"recipes": [...]}}` 형태로 시작해서 끝내야 하며, JSON 외의 설명 텍스트, 해설, 코드 블록(```json 등)은 포함하지 마세요.

    ✅ 올바른 출력 예시:
    {{
      "recipes": [
        {{
          "food": "참치 토마토 오픈 샌드위치",
          "use_ingredients": ["빵", "참치", "토마토"],
          "difficulty": 2
        }},
        {{
          "food": "오징어 볶음 스파게티",
          "use_ingredients": ["밀가루", "오징어", "토마토"],
          "difficulty": 4
        }}
      ]
    }}
    """

    @staticmethod
    def build_recipe_prompt(food: str, ingredients: list) -> str:
        return f"""
        당신은 전문 요리사 AI입니다. 사용자가 요청한 음식의 상세 조리법을 제공합니다.

        요청된 음식: {food}  
        사용 가능한 재료: {json.dumps(ingredients, ensure_ascii=False)}

        필수 조건:
        - 반드시 요청된 음식과 제공된 재료만 사용하세요.
        - `use_ingredients` 배열의 각 객체는 반드시 `"name"`과 `"amount"` 두 개의 키를 포함해야 합니다.
        - 레시피는 단계별로 구성하며, 각 단계는 상세하고 명확하게 설명하세요.
        - 식재료로 사용할 수 없는 항목(예: 사람, 동물, 똥, 오줌, 플라스틱 등 비식용 물질)이 포함되어 있다면, 요리 추천은 절대 하지 말고 다음의 에러 메시지만 정확히 JSON 형태로 출력하세요:
        {{"error": "식재료로 사용할 수 없는 항목이 포함되어 있습니다."}}
        - 요리 과정에 도움이 되는 **실질적인 팁**을 한 문장 이상으로 작성하여 `tip` 필드에 포함하세요.
        - 응답은 반드시 **JSON 형식 본문만 출력**하세요. JSON 외의 설명이나 텍스트, 코드 블록(```json 등)은 절대 포함하지 마세요.

        ✅ 올바른 출력 예시:
        {{
          "food": "계란 오믈렛",
          "use_ingredients": [
            {{"name": "계란", "amount": "2개"}},
            {{"name": "양파", "amount": "50g"}},
            {{"name": "치즈", "amount": "30g"}},
            {{"name": "우유", "amount": "50ml"}}
          ],
          "steps": [
            "양파를 잘게 썰어 준비합니다.",
            "볼에 계란을 깨서 우유, 치즈와 섞어줍니다.",
            "팬에 양파를 볶은 후 혼합물을 붓고 천천히 익힙니다.",
            "반으로 접고 완성합니다."
          ],
          "tip": "우유를 넣으면 더 부드럽게 익습니다."
        }}
        """

    @staticmethod
    def build_quick_prompt(chat: str) -> str:
        return f"""
        당신은 요리 전문가 AI입니다. 사용자가 입력한 재료를 활용해 만들 수 있는 1가지 요리를 추천하세요.

        ## 지시사항

        1.  **입력 재료만 사용:** 사용자가 제공한 재료만으로 요리를 만드세요.
        2.  **JSON 형식만 출력:** 응답은 **반드시 JSON 형식 본문만** 출력해야 합니다. JSON 객체 외의 어떠한 설명, 텍스트, 코드 블록(```json)도 절대 포함하지 마세요.
        3.  **조리법 상세화:** 조리법은 단계별로 상세하고 실용적으로 작성하세요.
        4.  **정보 포함:** 재료의 사용량과 조리 팁을 반드시 포함하세요.

        ## 입력된 재료

        "{chat}"

        ## 에러 처리 (아래의 JSON 본문만 출력하세요)

        * 식재료로 사용할 수 없는 항목이 포함되어 있다면:
            {{"error": "식재료로 사용할 수 없는 항목이 포함되어 있습니다."}}

        * 입력된 재료가 명확하지 않은 경우:
            {{"error": "입력된 재료가 명확하지 않습니다."}}

        ## 올바른 출력 예시 (아래 JSON 형식과 완전히 동일하게 작성)

        {{
          "food": "치즈 오믈렛",
          "use_ingredients": [
            {{"name": "계란", "amount": "2개"}},
            {{"name": "치즈", "amount": "30g"}},
            {{"name": "우유", "amount": "50ml"}}
          ],
          "steps": [
            "1. 계란을 깨서 그릇에 담고, 우유, 소금 약간을 넣어 잘 섞어줍니다. 거품이 나지 않게 살살 저어주세요.",
            "2. 팬을 약불로 달구고 버터를 녹인 후, 계란물을 붓습니다. 가장자리가 살짝 익기 시작하면 실리콘 주걱으로 살살 안쪽으로 밀어 넣으며 모양을 잡아줍니다.",
            "3. 계란이 80% 정도 익었을 때, 미리 준비한 치즈를 중앙에 뿌려줍니다. 오믈렛을 반으로 접어 모양을 마무리합니다.",
            "4. 완성된 오믈렛을 접시에 담아 파슬리 가루 등을 뿌려 장식하면 더욱 좋습니다. 기호에 따라 케첩을 곁들여도 맛있습니다."
          ],
          "tip": "오믈렛은 약한 불에서 천천히 익혀야 부드럽고 촉촉한 식감을 살릴 수 있습니다. 팬이 너무 뜨거우면 계란이 순식간에 익어버려 오믈렛의 부드러움이 사라지게 되므로 주의하세요."
        }}
        """

    @staticmethod
    def build_search_prompt(chat: str) -> str:
        return f"""
        당신은 요리 전문가 AI입니다. 사용자가 입력한 음식명에 대한 정확한 레시피를 제공합니다.

        입력된 음식명: "{chat}"

        필수 조건:
        - 해당 음식만 다루고, 추천이나 설명은 생략하세요.
        - 재료와 양, 조리법, 팁을 포함한 JSON을 제공하세요.
        - 조리법은 단계별로 상세하게 작성하세요.
        - 응답은 반드시 **JSON 형식 본문만 출력**하세요. JSON 외의 설명이나 텍스트, 코드 블록(```json 등)은 절대 포함하지 마세요.

        잘못된 입력일 경우 (아래의 JSON 본문만 출력하세요):
        - 정확한 음식명이 아닐 경우:
            {{"error": "정확한 음식명을 입력해 주세요."}}

        ✅ 올바른 출력 예시:
        {{
          "food": "된장찌개",
          "use_ingredients": [
            {{"name": "애호박", "amount": "1/4개"}},
            {{"name": "두부", "amount": "1/2모"}},
            {{"name": "양파", "amount": "1/4개"}},
            {{"name": "된장", "amount": "2큰술"}}
          ],
          "steps": [
            "1. 애호박과 양파, 두부는 먹기 좋은 크기로 썰어 준비합니다.",
            "2. 냄비에 물을 붓고 된장을 풀어 끓여줍니다.",
            "3. 물이 끓으면 애호박과 양파를 넣고 끓여줍니다.",
            "4. 채소가 익으면 두부를 넣고 한소끔 더 끓인 후 불을 끕니다."
          ],
          "tip": "멸치 다시마 육수를 사용하면 더욱 깊은 맛을 낼 수 있습니다."
        }}
        """